<GlowSlider>:
    canvas:
        Clear
        Color:
            rgba: (self._track_inactive_color if self.value_track else self._bg_color) if self.orientation == 'horizontal' else (0, 0, 0, 0)
        SmoothLine:
            points: self.value_pos[0], self.center_y, self.right - self.padding , self.center_y
            width: self.line_width
        Color:
            rgba: (self._track_inactive_color if self.value_track else self._bg_color) if self.orientation == 'vertical' else (0, 0, 0, 0)
        SmoothLine:
            points: self.center_x, self.value_pos[1], self.center_x, self.top - self.padding
            width: self.line_width
        Color:
            rgba: (self._track_active_color if self.value_track else self._bg_color) if self.orientation == 'horizontal' else (0, 0, 0, 0)
        SmoothLine:
            points: self.x + self.padding, self.center_y, self.value_pos[0], self.center_y
            width: self.line_width
        Color:
            rgba: (self._track_active_color if self.value_track else self._bg_color) if self.orientation == 'vertical' else (0, 0, 0, 0)
        SmoothLine:
            points: self.center_x, self.y + self.padding, self.center_x, self.value_pos[1]
            width: self.line_width
    height: self.thumb_size
    size_hint_y: None
    GlowIcon:
        id: glow_slider_thumb
        pos: (root.value_pos[0] - self.width / 2, root.center_y - self.height / 2) if root.orientation == 'horizontal' else (root.center_x - self.width / 2, root.value_pos[1] - self.height / 2)
        size: (root.thumb_size, root.thumb_size)
        border_radius: (self.width, )
        bg_color: root._thumb_color
        shadow_color: (0, 0, 0, 1)
        shadow_blur_radius: '10dp'
        adaptive_size: False
        shadow: 'outside'
        icon: 'blank'

    GlowLabel:
        id: glow_slider_hint
        pos: (root.value_pos[0] - self.width / 2, root.center_y + root.thumb_size / 2 + dp(5)) if root.orientation == 'horizontal' else (root.center_x + root.thumb_size / 2 + dp(5), root.value_pos[1] - self.height / 2)
        hidden: not root.hint or not root.active
        border_radius: root.hint_border_radius
        bg_color: root._hint_bg_color
        color: root._hint_text_color
        text: root._hint_text
        adaptive_size: True
        padding: ('5dp', )
